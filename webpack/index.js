!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var o=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))(function(r,i){function c(e){try{u(o.next(e))}catch(e){i(e)}}function s(e){try{u(o.throw(e))}catch(e){i(e)}}function u(e){e.done?r(e.value):new n(function(t){t(e.value)}).then(c,s)}u((o=o.apply(e,t||[])).next())})},r="";let i;function c(e){return o(this,void 0,void 0,function*(){const t=document.querySelector(".active"),n=document.querySelector("#hr-btm"),o=document.querySelector("#dark-mode"),r=document.querySelector(".selected");r&&r.classList.toggle("selected");const i=document.querySelector("#btn-"+e.id.split("-")[1]);i&&i.classList.toggle("selected"),t&&t!=e&&(t.classList.toggle("fade"),n&&o&&(n.classList.toggle("fade"),o.classList.toggle("fade"),setTimeout(()=>{t.classList.toggle("active"),t.classList.toggle("hide"),e.classList.toggle("hide"),setTimeout(()=>{e.classList.toggle("fade"),n.classList.toggle("fade"),o.classList.toggle("fade"),e.classList.toggle("active")},30)},150)))})}function s(){document.body.classList.toggle("dark")}window.onload=()=>{i=new AudioContext;const e=document.getElementById("heading-sub"),t=(new Date).getHours();!function(){const e=document.getElementById("btn-about"),t=document.getElementById("btn-port"),n=document.getElementById("dark-mode"),o=document.getElementById("ctn-about"),r=document.getElementById("ctn-port");e&&t&&n&&o&&r&&(e.addEventListener("click",()=>{c(o)}),t.addEventListener("click",()=>{c(r)}),n.addEventListener("click",()=>{s()}));const u=document.querySelector("button");u&&u.addEventListener("click",function(){i.resume().then(()=>{console.log("Playback resumed successfully")})});const l=document.getElementById("toast");document.addEventListener("looped",e=>{l&&(l.innerText=e.detail,l.classList.add("show"),setTimeout(()=>{l.classList.remove("show"),i.close(),i=new AudioContext},3e3))})}(),r=window.innerWidth<=800?"Web Developer | Programmer<br>Graphics Designer | Musician":"Web Developer | Programmer | Graphics Designer | Musician",(t>=18||t<=8)&&s(),document.body.classList.toggle("hide"),e&&(window.innerWidth>1e3?setTimeout(()=>{!function e(t,n,o){"&nbsp;"===t.innerHTML&&(t.innerHTML="");""===r&&(r=t.innerHTML,t.innerHTML="");o<r.length?(t.innerHTML+=r.charAt(o),o++,setTimeout(()=>{e(t,n,o)},n)):(o=0,r="")}(e,60,0)},150):e.innerHTML=r)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,